{"version":3,"sources":["data/runbacks.csv","views/TrackDetails.js","utils/utils.js","views/TrackBlock.js","views/Records.js","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["TrackDetails","props","track","useParams","columns","React","useMemo","Header","accessor","data","records","map","record","runback","driver","items","kart","time","Container","pageSize","length","defaultSortMethod","a","b","localeCompare","showPagination","className","defaultSorted","id","toMs","duration","arr","split","withRouter","useState","times","setTimes","useEffect","sort","slice","Card","onClick","history","push","i","Row","Col","Records","setRecords","Papa","parse","download","header","complete","input","Object","keys","tracks","cup","Routes","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a74f1d4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/runbacks.ae7c6976.csv\";","import React, { useMemo } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ReactTable from \"react-table-v6\";\r\nimport \"react-table-v6/react-table.css\";\r\n\r\nfunction TrackDetails(props) {\r\n\r\n  const { track } = useParams();\r\n\r\n  const columns = React.useMemo(() => [\r\n      {\r\n        Header: \"#\",\r\n        accessor: \"runback\"\r\n      },\r\n      {\r\n        Header: \"Driver\",\r\n        accessor: \"driver\"\r\n      },\r\n      {\r\n        Header: \"Items\",\r\n        accessor: \"items\"\r\n      },\r\n      {\r\n        Header: \"kart\",\r\n        accessor: \"kart\"\r\n      },\r\n      {\r\n        Header: \"Time\",\r\n        accessor: \"time\"\r\n      }\r\n    ], []\r\n  );\r\n\r\n  const sort = (a, b) => {\r\n    if (typeof a === \"number\") {\r\n      return b - a;\r\n    } else {\r\n      return a.localeCompare(b);\r\n    }\r\n  };\r\n\r\n  const data = useMemo(() => props.records.map(record => {\r\n      return {\r\n        runback: record.runback,\r\n        driver: record.driver,\r\n        items: record.items,\r\n        kart: record.kart,\r\n        time: record[track]\r\n      }\r\n    }), [props.records]\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <h3>{track}</h3>\r\n      <ReactTable\r\n        data={data}\r\n        pageSize={data.length}\r\n        columns={columns}\r\n        defaultSortMethod={sort}\r\n        showPagination={false}\r\n        className=\"-striped -highlight\"\r\n        defaultSorted={[{id: \"time\"}]}\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default TrackDetails;","export const trackSort = track => (a, b) => toMs(a[track]) - toMs(b[track]);\r\n\r\nexport function toMs(duration) {\r\n  let arr = duration.split(/[:.]/);\r\n  return arr[0] * 60 * 1000 + arr[1] * 1000 + arr[2];\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Card, Row, Col } from \"react-bootstrap\";\r\nimport { trackSort } from \"../utils/utils\";\r\n\r\nfunction TrackBlock(props) {\r\n\r\n  const [times, setTimes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setTimes(props.data.sort(trackSort(props.track)).slice(0, 5));\r\n  }, [props.data, props.track]);\r\n\r\n  return (\r\n    <Card>\r\n      <b className=\"clickable\" onClick={() => props.history.push(\"/tracks/\" + props.track)}>{props.track}</b>\r\n      {times.map((time, i) => {\r\n        return (\r\n          <Row key={i}>\r\n            <Col>{time.driver} + {time.items}</Col>\r\n            <Col>{time[props.track]}</Col>\r\n            <br/>\r\n          </Row>\r\n        )\r\n      })}\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default withRouter(TrackBlock);","import React, {useEffect, useState} from \"react\";\r\nimport data from \"../data/runbacks.csv\";\r\nimport tracks from \"../data/maps.json\";\r\nimport Papa from \"papaparse\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport TrackBlock from \"./TrackBlock\";\r\n\r\nfunction Records() {\r\n  const [records, setRecords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Papa.parse(data, {\r\n      download: true,\r\n      header: true,\r\n      complete: function (input) {\r\n        setRecords(input.data);\r\n      }\r\n    });\r\n  },[]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {Object.keys(tracks).map(cup => {\r\n        return (\r\n          <div key={cup}>\r\n            <h3>{cup}</h3>\r\n            <hr/>\r\n            <Row>\r\n              {tracks[cup].map(track => {\r\n                return (\r\n                  <Col key={track}>\r\n                    <TrackBlock track={track} data={records} />\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Records;","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport TrackDetails from \"./views/TrackDetails\";\r\nimport Records from \"./views/Records\";\r\n\r\nfunction Routes(props) {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/tracks/:track\">\r\n        <TrackDetails records={props.records} />\r\n      </Route>\r\n      <Route path=\"/\">\r\n        <Records records={props.records} />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React, {useEffect, useState} from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Papa from \"papaparse\";\nimport data from \"./data/runbacks.csv\";\nimport Routes from \"./Routes\";\n\nfunction App() {\n  const [records, setRecords] = useState([]);\n\n  useEffect(() => {\n    Papa.parse(data, {\n      download: true,\n      header: true,\n      complete: function (input) {\n        setRecords(input.data);\n      }\n    });\n  },[]);\n\n  return (\n    <div className=\"App\">\n      <Routes records={records} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}